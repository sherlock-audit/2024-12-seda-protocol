syntax = "proto3";
package sedachain.pubkey.v1;

import "cosmos_proto/cosmos.proto";

option go_package = "github.com/sedaprotocol/seda-chain/x/pubkey/types";

// IndexPubKeyPair defines an index - public key pair.
message IndexedPubKey {
  uint32 index = 1;
  bytes pub_key = 2
      [ (cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey" ];
}

// ProvingScheme defines a proving scheme.
message ProvingScheme {
  // index is the SEDA key index.
  uint32 index = 1;
  // is_activated indicates if the proving scheme has been activated.
  bool is_activated = 2;
  // activation_height is the height at which the proving scheme is to
  // be activated. This field is set to -1 by default until the public
  // key registration rate reaches the activation threshold and is reset
  // if the public key registration rate goes below the threshold before
  // the scheme is activated.
  int64 activation_height = 3;
}

// Params defines the parameters for the pubkey module.
message Params {
  // activation_block_delay is the number of blocks to wait before activating a
  // proving scheme.
  int64 activation_block_delay = 1;
  // activation_threshold_percent is the percentage of the total voting power
  // that is required to activate a proving scheme.
  uint32 activation_threshold_percent = 2;
}
